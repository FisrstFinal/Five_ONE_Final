<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="watchDAO">
	<select id="getVideo" parameterType="String" resultType="videoplayDTO">
		select r.* from (select * from video_play inner join user_channel using(channel_code)) r where video_code = #{video_code}
	</select>
<!-- 
	<select id="getMyReply" parameterType="hashmap" resultType="replyDTO">
		select * 
		from reply inner join user_channel using(channel_code)
		where video_code='101010' and reply_comment in(0,1) and channel_code = #{channel_code};
	</select> -->
	<select id="getReply" parameterType="hashmap" resultType="replyDTO">
	<![CDATA[
		select * 
		from (select row_number() over(order by a.${reply_option} desc) rnum, a.* 
		from (select b.*, (b.reply_good - b.reply_bad) most 
		from (select * from reply inner join user_channel using(channel_code) where video_code = #{video_code} and reply_comment in(0,1)) b) a) 
		where rnum >= #{startNo} and rnum <= #{endNo}
	]]>		
	</select>
	
	<select id="getReplyLogin" parameterType="hashmap" resultType="replyDTO">
	<![CDATA[
		select * 
		from (select row_number() over(order by a.${reply_option} desc) rnum, a.* 
		from (select b.*, (b.reply_good - b.reply_bad) most 
		from (select * from reply inner join user_channel using(channel_code) where video_code = #{video_code} and reply_comment in(0,1)) b) a) 
		where rnum >= #{startNo} and rnum <= #{endNo} and channel_code != #{channel_code}
	]]>
	</select>

	<select id="getComment" parameterType="hashmap" resultType="replyDTO">
	<![CDATA[
		select *
		from (select row_number() over(order by a.reply_regdate) rnum, a.* 
	    from (select * from reply inner join user_channel using(channel_code) where video_code = #{video_code} and reply_group = #{reply_group} and reply_comment=2) a)
		where rnum >= #{startNo} and rnum <= #{endNo}
	]]>
	</select>
	
	<select id="getReplyCount" parameterType="String" resultType="int">
		select count(*) count from reply where video_code = #{video_code}
	</select>
	
	<select id="getCommentCount" parameterType="hashmap" resultType="int">
		select count(*) count from reply where video_code = #{video_code} and reply_group = #{reply_group} and reply_comment = 2
	</select>
	
	
	<select id="getPlayList" parameterType="String" resultType="videoplayDTO">
		select *
		from playlist p join (select * from video_play inner join user_channel using(channel_code)) v
		on p.video_code = v.video_code
		where playlist_code = #{playlist_code}
	</select>
	
	<select id="all" parameterType="hashmap" resultType="videoplayDTO">
		<![CDATA[
		select * from video_play inner join user_channel using(channel_code) where rownum <= 40 order by dbms_random.random
		]]>
	</select>
	
	<select id="category" parameterType="hashmap" resultType="videoplayDTO">
		<![CDATA[
		select * from video_play inner join user_channel using(channel_code) where category_code = #{category_code} and rownum <= 40 order by dbms_random.random
		]]>
	</select>
	
	<select id="current" parameterType="hashmap" resultType="videoplayDTO">
		<![CDATA[
		select channel_code, a.channel_name, channel_profil, video_img, video_view_cnt, max(video_regdate)as video_regdate
		from video_play a inner join user_channel using(channel_code) 
		where channel_code != #{channel_code} and rownum <= 40
		group by channel_code, a.channel_name, channel_profil, video_img, video_view_cnt
		order by dbms_random.random
		]]>
	</select>
	
	<select id="history" parameterType="hashmap" resultType="videoplayDTO">
		<![CDATA[
		select * 
		from history a inner join (select * from video_play inner join user_channel using(channel_code)) b using(video_code)
		where a.channel_code = #{channel_code} and rownum <= 40
		order by dbms_random.random
		]]>
	</select>
	
	<select id="getVideoCount" parameterType="String" resultType="int">
 		select count(*) from video_play where channel_code = #{channel_code}
 	</select>

	<select id="getSubscribe" parameterType="hashmap" resultType="subscribeDTO">
		select * from subscribe where channel_code = #{channel_code} and member_code = #{repChannelCode}
	</select>
	
	<select id="getGood" parameterType="hashmap" resultType="GoodDTO">
		select * from good where video_code = #{video_code} and channel_code = #{repChannelCode}
	</select>
	
	<select id="getFeedback" parameterType="hashmap" resultType="feedbackDTO">
		select * from feedback_reply where video_code = #{video_code} and channel_code = #{repChannelCode}
	</select>
	
	<insert id="insertGood" parameterType="hashmap">
		insert into good values(#{good_code}, #{repChannelCode}, #{video_code}, sysdate, #{good_bad})
	</insert>
	
	<delete id="deleteGood" parameterType="String">
		delete from good where good_code = #{good_code}
	</delete>
	
	<update id="updateGood" parameterType="hashmap">
		update good set good_bad = #{good_bad} where good_code = #{good_code}
	</update>
	
	<insert id="insertSubscribe" parameterType="hashmap">
		insert into subscribe values(#{subscribe_code}, #{channel_code}, #{repChannelCode})
	</insert>
	
	<delete id="deleteSubscribe" parameterType="String">
		delete from subscribe where subscribe_code = #{subscribe_code}
	</delete>
	
	<select id="getVideoGoodCount" parameterType="String" resultType="int">
		select video_good from video_play where video_code = #{video_code}
	</select>
	
	<insert id="insertFeedback" parameterType="hashmap">
		insert into feedback_reply values(#{feedback_code}, #{video_code}, #{reply_code}, #{repChannelCode}, #{feedback_good}, current_date)
	</insert>
	
	<delete id="deleteFeedback" parameterType="String">
		delete from feedback_reply where feedback_code = #{feedback_code}
	</delete>
	
	<update id="updateFeedback" parameterType="hashmap">
		update feedback_reply set feedback_good = #{feedback_good} where feedback_code = #{feedback_code}
	</update>
	
	<update id="plusVideoGood" parameterType="hashmap">
		update video_play
		set ${option} = ${option}+1
		where video_code=#{video_code}
		<selectKey keyProperty="cnt" resultType="int" order="AFTER">
			select video_good from video_play where video_code = #{video_code}
		</selectKey>
	</update>
	
	<update id="minusVideoGood" parameterType="hashmap">
		update video_play
		set ${option} = ${option}-1
		where video_code=#{video_code}
		<selectKey keyProperty="cnt" resultType="int" order="AFTER">
			select video_good from video_play where video_code = #{video_code}
		</selectKey>
	</update>
	
	<update id="changeToGood" parameterType="hashmap">
		update video_play 
		set video_good = (select video_good+1 from video_play where video_code =#{video_code}), video_bad = (select video_bad-1 from video_play where video_code=#{video_code})
		where video_code = #{video_code}
		<selectKey keyProperty="cnt" resultType="int" order="AFTER">
			select ${option} from video_play where video_code = #{video_code}
		</selectKey>	
	</update>
	
	<update id="changeToBad" parameterType="hashmap">
		update video_play 
		set video_good = (select video_good-1 from video_play where video_code=#{video_code}), video_bad = (select video_bad+1 from video_play where video_code=#{video_code})
		where video_code=#{video_code}
		<selectKey keyProperty="cnt" resultType="int" order="AFTER">
			select ${option} from video_play where video_code = #{video_code}
		</selectKey>
	</update>
	
	<insert id="inputReply" parameterType="hashmap">
		insert into reply values(#{video_code}, #{reply_code}, #{reply_comment}, #{reply_cont}, #{repChannelCode}, current_date, null, 0, 0, #{reply_group})
	</insert>
	
	<select id="getNewReply" parameterType="String" resultType="replyDTO">
		select * from reply inner join user_channel using(channel_code) where reply_code = #{reply_code}
	</select>
	
	<select id="getMyReply" parameterType="hashmap" resultType="replyDTO">
		select * 
		from (select b.*, (b.reply_good - b.reply_bad) most 
		from (select * from reply inner join user_channel using(channel_code) where video_code = #{video_code} and reply_comment in(0,1)) b)
		where channel_code = #{repChannelCode}
		order by #{reply_option} desc	
	</select>
	
	<select id="getChannel" parameterType="String" resultType="channeldto">
		select * from user_channel where channel_code = #{repChannelCode}
	</select>
	
	<update id="updateComment" parameterType="String">
		update reply set reply_comment = 1 where reply_code = #{reply_code}
	</update>
	
	<update id="plusReplyGood" parameterType="hashmap">
		update reply
		set ${option} = ${option}+1
		where reply_code=#{reply_code}
		<selectKey keyProperty="cnt" resultType="int" order="AFTER">
			select reply_good from reply where reply_code = #{reply_code}
		</selectKey>
	</update>
	
	<update id="minusReplyGood" parameterType="hashmap">
		update reply
		set ${option} = ${option}-1
		where reply_code=#{reply_code}
		<selectKey keyProperty="cnt" resultType="int" order="AFTER">
			select reply_good from reply where reply_code = #{reply_code}
		</selectKey>
	</update>
	
	<update id="changeToGoodReply" parameterType="hashmap">
		update reply 
		set reply_good = (select reply_good+1 from reply where reply_code =#{reply_code}), reply_bad = (select reply_bad-1 from reply where reply_code=#{reply_code})
		where reply_code = #{reply_code}
		<selectKey keyProperty="cnt" resultType="int" order="AFTER">
			select ${option} from reply where reply_code = #{reply_code}
		</selectKey>	
	</update>
	
	<update id="changeToBadReply" parameterType="hashmap">
		update reply 
		set reply_good = (select reply_good-1 from reply where reply_code =#{reply_code}), reply_bad = (select reply_bad+1 from reply where reply_code=#{reply_code})
		where reply_code = #{reply_code}
		<selectKey keyProperty="cnt" resultType="int" order="AFTER">
			select ${option} from reply where reply_code = #{reply_code}
		</selectKey>	
	</update>
	
	<insert id="newPlaylist" parameterType="hashmap">
		insert into bundlelist values (#{bundle_code}, #{playlist_title}, CURRENT_DATE, #{playlist_open}, #{repChannelCode})
	</insert>
	
	<select id="getMyBundleList" parameterType="hashmap" resultType="bundleDTO">
		select * from bundlelist where channel_code =  #{repChannelCode}
	</select>
	
	<select id="getMyPlaylist" parameterType="hashmap" resultType="playlistDTO">
		select * from playlist where video_code = #{video_code} and channel_code = #{repChannelCode}
	</select>
</mapper>